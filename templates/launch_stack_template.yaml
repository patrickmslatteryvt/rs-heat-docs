heat_template_version: 2015-10-15
description: This is a Heat template

parameters:
  key_name:
    type: string
    description : Name of a key pair to enable SSH access to instances.
    default: shared_initial_build_key

  flavor:
    type: string
    description: Flavor to use for the server.
    constraints:
      - custom_constraint: nova.flavor
    default: 1 GB General Purpose v1

  image:
    type: string
    description: >
      Name or ID of the image to use for the LAMP server.
      The image must have the software config agents baked-in.
    default: CentOS 7 (PVHVM) (Orchestration)
    immutable: true

resources:

  lamp_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: |
        #!/bin/bash -v
        yum clean all
        yum update -y
        yum install -y httpd mariadb php php-mysql
        echo "<?php phpinfo(); ?>" > /var/www/html/info.php
        systemctl is-enabled httpd.service || systemctl enable httpd.service
        systemctl is-active httpd.service || systemctl start httpd.service
        yum remove -y \
          chef.x86_64 \
          puppet.noarch \
          facter.x86_64 \
          hiera.noarch \
          salt.noarch \
          salt-minion.noarch \
          openpgm.x86_64 \
          python-babel.noarch \
          ruby-augeas.x86_64 \
          ruby-shadow.x86_64 \
          rubygem-rgen.noarch \
          xz-devel.x86_64 \
          pcre-devel.x86_64 \
          keyutils-libs-devel.x86_64 \
          libverto-devel.x86_64

  lamp_deploy:
    type: OS::Heat::SoftwareDeployment
    properties:
      signal_transport: TEMP_URL_SIGNAL
      config:
        get_resource: lamp_config
      server:
        get_resource: lamp_server

  lamp_server:
    type: OS::Nova::Server
    properties:
      image: {get_param: image}
      flavor: {get_param: flavor}
      key_name: {get_param: key_name}
      software_config_transport: POLL_TEMP_URL
      user_data_format: SOFTWARE_CONFIG
      config_drive: True
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
        stack-name: { get_param: "OS::stack_name" }
        build_config: "monitoring_defaults"

outputs:
  server_php_info:
    description: URL for PHP info on LAMP server
    value:
      str_replace:
        template: http://host/info.php
        params:
          host: {get_attr: [lamp_server, networks, private, 0]}
